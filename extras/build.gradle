plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
}

repositories {
    mavenCentral()
}

dependencies {

}

sourceSets {
    main {
        resources {
            srcDirs "src/main/resources", "native"
        }
    }
}

compileJava {
    options.compilerArgs += ["-Aproject=${project.group}/${project.name}"]
}

artifacts {
    archives jar
}

test {
    useJUnitPlatform()
    testLogging {
        showStandardStreams = true
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name = 'Cardano Client Library Extra'
                description = 'Cardano Client Library Extra - Compiled native libs for Raspberry pi and other platforms not included in main jar'
                url = 'https://github.com/bloxbean/cardano-client-lib'
                licenses {
                    license {
                        name = 'The MIT License'
                        url = 'http://www.opensource.org/licenses/mit-license.php'
                    }
                }
                developers {
                    developer {
                        id = 'satran004'
                        name = 'Satya'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/bloxbean/cardano-client-lib.git'
                    developerConnection = 'scm:git:ssh://git@github.com/bloxbean/cardano-client-lib.git'
                    url = 'https://github.com/bloxbean/cardano-client-lib'
                }
            }
        }
    }

    repositories {
        String ossrhUsername = System.getenv('MAVEN_USER')
        String ossrhPassword = System.getenv('MAVEN_PASSWORD')

        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username ossrhUsername
                password ossrhPassword
            }
        }
    }
}

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

if (isReleaseVersion && !project.hasProperty("skipSigning")) {
    signing {
        sign publishing.publications
    }
}

