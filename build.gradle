plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
}

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'net.java.dev.jna', name: 'jna', version: '5.8.0'
    compile group: 'net.java.dev.jna', name: 'jna-platform', version: '5.8.0'
    compile 'info.picocli:picocli:4.6.1'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

sourceSets {
    main {
        resources {
            srcDirs "src/main/resources", "native"
        }
    }
}

compileJava {
    options.compilerArgs += ["-Aproject=${project.group}/${project.name}"]
}

task sourceJar(type: Jar) {
    classifier "sources"
    from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier "javadoc"
    from javadoc.destinationDir
}

artifacts {
    archives jar
    archives sourceJar
    archives javadocJar
}

//create a single Jar with all dependencies
task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'com.bloxbean.cardano.client.cli.CLIMain'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

test {
    useJUnitPlatform()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
//            artifact(sourceJar) {
//                classifier = 'sources'
//            }
//            artifact(javadocJar) {
//                classifier = 'javadoc'
//            }
            pom {
                name = 'Cardano Client Library'
                description = 'Cardano Client Library for Java'
                url = 'https://github.com/bloxbean/cardano-client-lib'
                licenses {
                    license {
                        name = 'The MIT License'
                        url = 'http://www.opensource.org/licenses/mit-license.php'
                    }
                }
                developers {
                    developer {
                        id = 'satran004'
                        name = 'Satya'
                        email = 'satran004@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/bloxbean/cardano-client-lib.git'
                    developerConnection = 'scm:git:ssh://git@github.com/bloxbean/cardano-client-lib.git'
                    url = 'https://github.com/bloxbean/cardano-client-lib'
                }
            }
        }
    }

    repositories {
        String ossrhUsername = System.getenv('MAVEN_USER')
        String ossrhPassword = System.getenv('MAVEN_PASSWORD')

        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username ossrhUsername
                password ossrhPassword
            }
        }
    }
}

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

if (isReleaseVersion && !project.hasProperty("skipSigning")) {
    signing {
        sign publishing.publications.mavenJava
//        sign configurations.archives
    }
}

