plugins {
    id 'java'
    id 'maven'
    id 'signing'
}

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'net.java.dev.jna', name: 'jna', version: '5.8.0'
    compile group: 'net.java.dev.jna', name: 'jna-platform', version: '5.8.0'
    compile 'info.picocli:picocli:4.6.1'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

sourceSets {
    main {
        resources {
            srcDirs "src/main/resources", "native"
        }
    }
}

compileJava {
    options.compilerArgs += ["-Aproject=${project.group}/${project.name}"]
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

//create a single Jar with all dependencies
task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'com.bloxbean.cardano.client.cli.CLIMain'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

test {
    useJUnitPlatform()
}

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

if (isReleaseVersion && !project.hasProperty("skipSigning")) {
    signing {
        sign configurations.archives
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'Cardano Client Library'
                packaging 'jar'
                description 'Cardano Client Library for Java'
                url 'https://github.com/bloxbean/cardano-client-lib'

                scm {
                    connection 'scm:git:git://github.com/bloxbean/cardano-client-lib.git'
                    developerConnection 'scm:git:ssh://git@github.com/bloxbean/cardano-client-lib.git'
                    url 'https://github.com/bloxbean/cardano-client-lib'
                }

                licenses {
                    license {
                        name 'The MIT License'
                        url 'http://www.opensource.org/licenses/mit-license.php'
                    }
                }

                developers {
                    developer {
                        id 'satran004'
                        name 'Satya'
                        email 'satran004@gmail.com'
                    }
                }
            }
        }
    }
}

